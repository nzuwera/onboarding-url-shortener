name: Release Build & Publish

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    if: startsWith(github.event.release.tag_name, 'v')
    runs-on: ubuntu-latest

    env:
      SERVER_PORT: 8080

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      - name: Lint code with Spotless
        run: ./gradlew spotlessCheck

      - name: Run tests with debug info
        run: ./gradlew test --stacktrace --info

      - name: Generate coverage report
        run: ./gradlew jacocoTestReport

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/reports/jacoco/test/html/

      - name: Log in to Docker Hub (using token)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        run: |
          TAG_NAME=${{ github.event.release.tag_name }}
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/url-shortener
          echo "Building Docker image: $IMAGE_NAME:$TAG_NAME"
          docker build -t $IMAGE_NAME:$TAG_NAME -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:$TAG_NAME
          docker push $IMAGE_NAME:latest
