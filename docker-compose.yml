services:
  url-shortener-app:
    image: url-shortener-app
    build: .
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_DB_URL: ${POSTGRES_URL}
      POSTGRES_DB_USERNAME: ${POSTGRES_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_PASSWORD}
      OPENAPI_DEV_URL: ${ALLOWED_ORIGIN}
      ALLOWED_ORIGIN: ${ALLOWED_ORIGIN}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  url-shortener-app2:
    image: url-shortener-app2
    build: .
    restart: always
    ports:
      - "${SERVER2_PORT}:${SERVER2_PORT}"
    environment:
      SERVER_PORT: ${SERVER2_PORT}
      POSTGRES_DB_URL: ${POSTGRES_URL}
      POSTGRES_DB_USERNAME: ${POSTGRES_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_PASSWORD}
      OPENAPI_DEV_URL: ${ALLOWED_ORIGIN}
      ALLOWED_ORIGIN: ${ALLOWED_ORIGIN}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: ${SPRING_REDIS_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${SERVER2_PORT}/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "${NGINX_HOST_PORT}:${NGINX_CONTAINER_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      url-shortener-app:
        condition: service_healthy
      url-shortener-app2:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${NGINX_CONTAINER_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      nginx:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:${PROMETHEUS_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      prometheus:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "${SPRING_REDIS_PORT}:${SPRING_REDIS_PORT}"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
